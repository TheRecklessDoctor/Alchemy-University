{"ast":null,"code":"var _jsxFileName = \"/Users/dayanperera/Documents/Work/AlchemyUniversity/blockexplorer/src/components/Home.js\",\n  _s = $RefreshSig$();\nimport { Alchemy, Network, Utils } from 'alchemy-sdk';\nimport { useEffect, useState } from 'react';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst settings = {\n  apiKey: process.env.REACT_APP_ALCHEMY_API_KEY,\n  network: Network.ETH_MAINNET\n};\n\n// In this week's lessons we used ethers.js. Here we are using the\n// Alchemy SDK is an umbrella library with several different packages.\n//\n// You can read more about the packages here:\n//   https://docs.alchemy.com/reference/alchemy-sdk-api-surface-overview#api-surface\nconst alchemy = new Alchemy(settings);\nfunction Home() {\n  _s();\n  const [blockNumber, setBlockNumber] = useState();\n  const [blockDetails, setBlockDetails] = useState();\n  const [blockTransactions, setBlockTransactions] = useState([]);\n  useEffect(() => {\n    async function getBlockNumber() {\n      setBlockNumber(await alchemy.core.getBlockNumber());\n    }\n    getBlockNumber();\n  }, []);\n  useEffect(() => {\n    async function getBlockDetails() {\n      try {\n        const data = await alchemy.core.getBlockWithTransactions(blockNumber);\n        console.log(data);\n        setBlockDetails(data);\n        setBlockTransactions(data[\"transactions\"]);\n      } catch (error) {\n        setBlockDetails([]);\n        setBlockTransactions([]);\n      }\n    }\n    getBlockDetails();\n\n    // console.log(blockTransactions);\n  }, [blockNumber, setBlockDetails, setBlockTransactions, blockTransactions]);\n  function getFee(transaction, decimals) {\n    const fee = transaction.gasLimit * transaction.gasPrice;\n    if (fee.toString() === \"NAN\") return \"0\";\n    return parseFloat(Utils.formatEther(fee.toString())).toFixed(decimals);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"BlockDetails\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [\"Block Number: \", blockNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [\"Time stamp: \", !blockDetails ? 'Loading' : blockDetails['timestamp']]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [\"Miner: \", !blockDetails ? 'Loading' : blockDetails['miner']]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TableContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"TransactionsList\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Transaction Hash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Value\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Fee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 25\n            }, this)]\n          }, 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: blockTransactions.map((transaction, index) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: transaction.hash.substring(0, 25)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: parseFloat(transaction.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: getFee(transaction, 5)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 29\n              }, this)]\n            }, index + 1, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"Wxwtd/HbSB4pIoCDWtBkGH8OdTE=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Alchemy","Network","Utils","useEffect","useState","React","settings","apiKey","process","env","REACT_APP_ALCHEMY_API_KEY","network","ETH_MAINNET","alchemy","Home","blockNumber","setBlockNumber","blockDetails","setBlockDetails","blockTransactions","setBlockTransactions","getBlockNumber","core","getBlockDetails","data","getBlockWithTransactions","console","log","error","getFee","transaction","decimals","fee","gasLimit","gasPrice","toString","parseFloat","formatEther","toFixed","map","index","hash","substring","value"],"sources":["/Users/dayanperera/Documents/Work/AlchemyUniversity/blockexplorer/src/components/Home.js"],"sourcesContent":["import { Alchemy, Network, Utils } from 'alchemy-sdk';\nimport { useEffect, useState } from 'react';\nimport React from 'react';\n\n\nconst settings = {\n    apiKey: process.env.REACT_APP_ALCHEMY_API_KEY,\n    network: Network.ETH_MAINNET,\n  };\n\n\n  // In this week's lessons we used ethers.js. Here we are using the\n// Alchemy SDK is an umbrella library with several different packages.\n//\n// You can read more about the packages here:\n//   https://docs.alchemy.com/reference/alchemy-sdk-api-surface-overview#api-surface\nconst alchemy = new Alchemy(settings);\n\n\nfunction Home()\n{\n    const [blockNumber, setBlockNumber] = useState();\n    const [blockDetails, setBlockDetails] = useState();\n    const [blockTransactions, setBlockTransactions] = useState([]);\n  \n    useEffect(() => {\n  \n      async function getBlockNumber() {\n        setBlockNumber(await alchemy.core.getBlockNumber());\n      }\n      getBlockNumber();\n  \n    }, []);\n  \n    useEffect(() => {\n      async function getBlockDetails(){\n        try{\n          const data = await alchemy.core.getBlockWithTransactions(blockNumber);\n          console.log(data);\n          setBlockDetails(data);\n          setBlockTransactions(data[\"transactions\"]);\n  \n        }catch(error){\n          setBlockDetails([]);\n          setBlockTransactions([]);\n        }\n      }\n  \n      getBlockDetails();\n  \n      // console.log(blockTransactions);\n    }, [blockNumber, setBlockDetails, setBlockTransactions, blockTransactions]);\n  \n  \n    function getFee(transaction, decimals){\n      const fee = transaction.gasLimit * transaction.gasPrice;\n  \n      if(fee.toString() === \"NAN\") return \"0\";\n  \n      return parseFloat(Utils.formatEther(fee.toString())).toFixed(decimals);\n    }\n\n    return(\n        <div>\n            <div className=\"BlockDetails\">\n                <div className='item'>Block Number: {blockNumber}</div>\n                <div className='item'>Time stamp: {!blockDetails ? 'Loading' : blockDetails['timestamp']}</div> \n                <div className='item'>Miner: {!blockDetails ? 'Loading' : blockDetails['miner']}</div>\n            </div>\n            <div className=\"TableContainer\">\n                <table className='TransactionsList'>\n                    <thead>\n                        <tr key={0}>\n                        <th >Transaction Hash</th>\n                        <th >Value</th>\n                        <th>Fee</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {blockTransactions.map((transaction, index) => {\n                        return (\n                            <tr key={index+1}>\n                            <td>{transaction.hash.substring(0, 25)}</td>\n                            <td>{parseFloat(transaction.value)}</td>\n                            <td>{getFee(transaction, 5)}</td>\n                            </tr>\n                        )\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}