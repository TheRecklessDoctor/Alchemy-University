{"ast":null,"code":"var _jsxFileName = \"/Users/dayanperera/Documents/Programming/AlchemyUniversity/blockexplorer/src/components/Accounts.js\",\n  _s = $RefreshSig$();\nimport { Alchemy, Network } from 'alchemy-sdk';\nimport { useState } from 'react';\nimport React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { FormControl, FormLabel } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst settings = {\n  apiKey: process.env.REACT_APP_ALCHEMY_API_KEY,\n  network: Network.ETH_MAINNET\n};\nfunction Accounts() {\n  _s();\n  const [address, setAddress] = useState(\"\");\n  const [balance, setBalance] = useState(0);\n  function handleSubmit(event) {\n    event.preventDefault();\n    const balance = Alchemy.core.getBalance(address, \"latest\");\n    setBalance(balance);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: \"Enter Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: address,\n        onChange: e => setAddress(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onSubmit: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Balance for address:\", address, \" is: \", balance, \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(Accounts, \"BFuy2Ra1ubK7jVYg4WcQYsJAYpU=\");\n_c = Accounts;\nexport default Accounts;\nvar _c;\n$RefreshReg$(_c, \"Accounts\");","map":{"version":3,"names":["Alchemy","Network","useState","React","TextField","Button","FormControl","FormLabel","settings","apiKey","process","env","REACT_APP_ALCHEMY_API_KEY","network","ETH_MAINNET","Accounts","address","setAddress","balance","setBalance","handleSubmit","event","preventDefault","core","getBalance","e","target","value"],"sources":["/Users/dayanperera/Documents/Programming/AlchemyUniversity/blockexplorer/src/components/Accounts.js"],"sourcesContent":["import { Alchemy, Network} from 'alchemy-sdk';\nimport { useState } from 'react';\nimport React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { FormControl, FormLabel } from '@mui/material'\n\n\nconst settings = {\n    apiKey: process.env.REACT_APP_ALCHEMY_API_KEY,\n    network: Network.ETH_MAINNET,\n};\n\nfunction Accounts()\n{\n    const [address, setAddress] = useState(\"\");\n    const [balance, setBalance] = useState(0);\n\n    function handleSubmit(event)\n    {\n        event.preventDefault();\n        const balance = Alchemy.core.getBalance(address, \"latest\");\n        setBalance(balance);\n    }\n\n\n    return(\n        <div>\n            <FormControl>\n                <FormLabel>Enter Address</FormLabel>\n                <TextField value={address} onChange={(e)=>setAddress(e.target.value)}></TextField>\n                <Button onSubmit={handleSubmit}>Submit</Button>\n            </FormControl>\n\n            <p>Balance for address:{address} is: {balance}.</p>\n        </div>\n    )\n\n}\n\nexport default Accounts;"],"mappings":";;AAAA,SAASA,OAAO,EAAEC,OAAO,QAAO,aAAa;AAC7C,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,WAAW,EAAEC,SAAS,QAAQ,eAAe;AAAA;AAGtD,MAAMC,QAAQ,GAAG;EACbC,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC,yBAAyB;EAC7CC,OAAO,EAAEZ,OAAO,CAACa;AACrB,CAAC;AAED,SAASC,QAAQ,GACjB;EAAA;EACI,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EAEzC,SAASkB,YAAY,CAACC,KAAK,EAC3B;IACIA,KAAK,CAACC,cAAc,EAAE;IACtB,MAAMJ,OAAO,GAAGlB,OAAO,CAACuB,IAAI,CAACC,UAAU,CAACR,OAAO,EAAE,QAAQ,CAAC;IAC1DG,UAAU,CAACD,OAAO,CAAC;EACvB;EAGA,oBACI;IAAA,wBACI,QAAC,WAAW;MAAA,wBACR,QAAC,SAAS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA0B,eACpC,QAAC,SAAS;QAAC,KAAK,EAAEF,OAAQ;QAAC,QAAQ,EAAGS,CAAC,IAAGR,UAAU,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAa,eAClF,QAAC,MAAM;QAAC,QAAQ,EAAEP,YAAa;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB;IAAA;MAAA;MAAA;MAAA;IAAA,QACrC,eAEd;MAAA,mCAAwBJ,OAAO,WAAOE,OAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA;IAAA;IAAA;IAAA;EAAA,QACjD;AAGd;AAAC,GAzBQH,QAAQ;AAAA,KAARA,QAAQ;AA2BjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}